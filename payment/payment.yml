apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: k8-payment-app
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://github.com/maximorero14/k3s_project.git
    targetRevision: HEAD
    path: payment
  destination:
    server: https://kubernetes.default.svc
    namespace: default
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
---
# Original Deployment YAML
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8-payment-deployment
  labels:
    app: k8-payment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8-payment
  template:
    metadata:
      labels:
        app: k8-payment
    spec:
      containers:
        - name: k8-payment
          image: maximorero14/k8_payment:latest
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /ping
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /ping
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 20
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            
            - name: SPRING_APPLICATION_JSON
              valueFrom:
                configMapKeyRef:
                  name: k8-payment-config
                  key: SPRING_APPLICATION_JSON

            - name: SPRING_DATASOURCE_URL
              value: "jdbc:postgresql://postgres-postgresql.postgres.svc.cluster.local:5432/mydb"
            - name: SPRING_DATASOURCE_USERNAME
              value: "myuser"
            - name: SPRING_DATASOURCE_PASSWORD
              value: "mypassword"
            - name: SPRING_DATASOURCE_DRIVER_CLASS_NAME
              value: "org.postgresql.Driver"
---
apiVersion: v1
kind: Service
metadata:
  name: k8-payment-service
spec:
  type: NodePort
  selector:
    app: k8-payment
  ports:
    - port: 80          # Puerto expuesto en el cl√∫ster
      targetPort: 8080  # Puerto en el contenedor
      nodePort: 30083   # Puerto en el nodo (lo puedes cambiar si quieres)